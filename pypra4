# Python Questions

# Question 1: Find the maximum difference between consecutive elements in a list
def max_consecutive_diff(lst):
    return max(abs(a - b) for a, b in zip(lst, lst[1:]))

print(max_consecutive_diff([10, 15, 20, 7, 25]))

# Question 2: Check if two lists are disjoint (no common elements)
def are_disjoint(lst1, lst2):
    return not set(lst1) & set(lst2)

print(are_disjoint([1, 2, 3], [4, 5, 6]))
print(are_disjoint([1, 2, 3], [3, 4, 5]))

# Question 3: Rotate a list to the right by k steps
def rotate_list(lst, k):
    k %= len(lst)
    return lst[-k:] + lst[:-k]

print(rotate_list([1, 2, 3, 4, 5], 2))

# Question 4: Flatten a nested dictionary
def flatten_dict(d, parent_key='', sep='.'):
    items = []
    for k, v in d.items():
        new_key = f"{parent_key}{sep}{k}" if parent_key else k
        if isinstance(v, dict):
            items.extend(flatten_dict(v, new_key, sep=sep).items())
        else:
            items.append((new_key, v))
    return dict(items)

nested = {"a": {"b": {"c": 1}}, "d": 2}
print(flatten_dict(nested))

# Question 5: Find the longest increasing subsequence in a list
def longest_increasing_subsequence(lst):
    n = len(lst)
    dp = [1] * n
    for i in range(n):
        for j in range(i):
            if lst[i] > lst[j]:
                dp[i] = max(dp[i], dp[j] + 1)
    return max(dp)

print(longest_increasing_subsequence([10, 22, 9, 33, 21, 50, 41, 60]))

# Question 6: Replace all spaces in a string with a specific character
def replace_spaces(s, char):
    return s.replace(' ', char)

print(replace_spaces("hello world python", "_"))

# Question 7: Compute the transpose of a matrix
def transpose(matrix):
    return [list(row) for row in zip(*matrix)]

matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
print(transpose(matrix))

# Question 8: Group elements of a list based on a function
def group_by_function(lst, func):
    from collections import defaultdict
    grouped = defaultdict(list)
    for item in lst:
        grouped[func(item)].append(item)
    return dict(grouped)

print(group_by_function([1, 2, 3, 4, 5, 6], lambda x: x % 2))

# Question 9: Find the k most frequent elements in a list
def k_most_frequent(lst, k):
    from collections import Counter
    return [item for item, _ in Counter(lst).most_common(k)]

print(k_most_frequent([1, 2, 3, 2, 4, 2, 3, 1], 2))

# Question 10: Check if a number is a perfect square
def is_perfect_square(n):
    return int(n**0.5) ** 2 == n

print(is_perfect_square(16))
print(is_perfect_square(14))
